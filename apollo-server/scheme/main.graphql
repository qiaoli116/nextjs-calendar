
type Query {
    teachers: [Teacher]
    teacher(orgId: String): Teacher
    rooms: [Room]
    room(roomNumber: String): Room
    tases: [TAS]
    tas(year: String, department: String, qualificationCode: String): TAS
    tasSubject(year: String, department: String, qualificationCode: String, subjectCode: String): TAS
    sessions: [Session]
    session(reference: String): Session
    subjects: [Subject]
    subject(reference: String): Subject
}

type Mutation {
    teacherCreate(orgId: String, userName: String, email: String, name: NameInput): Teacher
    teacherUpdate(orgId: String, userName: String, email: String, name: NameInput): Teacher
    teacherDelete(orgId: String): Boolean
    roomCreate(roomNumber: String, type: String): Room
    roomUpdate(roomNumber: String, type: String): Room
    roomDelete(roomNumber: String): Boolean
    tasCreate(year: String, department: String, qualificationInput: TASQualificationInput): TAS
    tasAddSubjects(tasIndex: TASIndexInput, subjects: [TASSubjectInput]): TAS
#   addRoom(roomNumber: String, type: String): Room
#   addTAS(year: String, department: String, qualificationCode: String): TAS
#   addTASSubject(year: String, department: String, qualificationCode: String, subjectCode: String, subjectTitle: String): TAS
#   addSubject(reference: String, code: String, title: String, term: String, department: String, block: String, qualificationCode: String, deliveryMode: String, startDate: String, endDate: String): Subject
#   addSession(reference: String, date: String, teacherOrgId: String, roomNumber: String, timeslots: [String]): Session
#   addSubjectUnit(reference: String, code: String, title: String, crn: String): Subject
#   addTASUnit(year: String, department: String, qualificationCode: String, subjectCode: String, code: String, title: String): TAS
}

type Room{
    roomNumber: String!
    type: String!
}

input NameInput {
    first: String
    last: String
}

type Name {
    first: String
    last: String
}

input TASQualificationInput {
    code: String!
    title: String!
}
type TASQualification {
    code: String!
    title: String!
}

type Teacher {
    orgId: String
    userName: String
    email: String
    name: Name
}

type DateRange{
    startDate: String!
    endDate: String!
}


interface Unit {
    code: String!
    title: String!
}

input TASUnitInput {
    code: String!
    title: String!
}
type TASUnit implements Unit{
    code: String!
    title: String!
}
type SubjectUnit implements Unit{
    code: String!
    title: String!
    crn: String!
}

input TASSubjectInput {
    code: String!
    title: String!
    units: [TASUnitInput]!
}
type TASSubject {
    code: String!
    title: String!
    units: [TASUnit]!
}
input TASIndexInput {
    year: String!
    department: String!
    qualificationCode: String!
}
type TAS {
    year: String!
    department: String!
    qualification: TASQualification
    subjects: [TASSubject]
}

type Subject {
    reference: String!
    code: String!
    title: String!
    term: String!
    department: String!
    block: String!
    qualification: TASQualification
    deliveryMode: String!
    dateRange: DateRange!
    units: [SubjectUnit]!
    sessions: [Session]!
}

type Session {
    reference: String!
    date: String!
    teacher: Teacher
    room: Room
    timeslots: [String]!
    subjects: [Subject]!
}


